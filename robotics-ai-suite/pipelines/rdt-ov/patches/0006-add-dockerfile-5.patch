From a1e428219872612b57748bd926639ac3db821a2b Mon Sep 17 00:00:00 2001
From: baihe-liu <baihe.liu@intel.com>
Date: Thu, 17 Jul 2025 19:52:50 +0800
Subject: [PATCH 6/6] add dockerfile (#5)

---
 docker/Dockerfile     | 80 +++++++++++++++++++++++++++++++++++++++++++
 docker/README.md      | 30 ++++++++++++++++
 docker/create_user.sh | 16 +++++++++
 3 files changed, 126 insertions(+)
 create mode 100644 docker/Dockerfile
 create mode 100644 docker/README.md
 create mode 100644 docker/create_user.sh

diff --git a/docker/Dockerfile b/docker/Dockerfile
new file mode 100644
index 0000000..71057ef
--- /dev/null
+++ b/docker/Dockerfile
@@ -0,0 +1,80 @@
+FROM ubuntu:22.04
+
+ENV DEBIAN_FRONTEND=noninteractive
+
+ARG http_proxy
+ARG https_proxy
+ENV http_proxy=${http_proxy}
+ENV https_proxy=${https_proxy}
+
+ENV HF_ENDPOINT=https://hf-mirror.com
+ENV HF_HOME=/home/.cache/huggingface
+
+RUN apt-get update && \
+    apt-get install -y --no-install-recommends \
+    build-essential \
+    cmake \
+    git \
+    wget \
+    curl \
+    gnupg \
+    ca-certificates \
+    unzip \
+    python3.11 \
+    python3-pip 
+
+# Install GPU driver 
+RUN wget -qO - https://repositories.intel.com/gpu/intel-graphics.key | \
+    gpg --yes --dearmor --output /usr/share/keyrings/intel-graphics.gpg
+
+RUN echo "deb [arch=amd64,i386 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/gpu/ubuntu jammy unified" | \
+    tee /etc/apt/sources.list.d/intel-gpu-jammy.list
+
+RUN apt-get update && apt-get install -y \ 
+    libze-intel-gpu1=24.52.32224.14-1077~22.04 \
+    libze1=1.19.2.0-1077~22.04 \
+    intel-opencl-icd=24.52.32224.14-1077~22.04 \
+    clinfo \
+    xpu-smi \
+    libze-dev \
+    intel-ocloc
+
+RUN apt install -y mesa-utils libgl1-mesa-dri libglx-mesa0 libigc2
+
+# Python dependencies
+RUN ln -sf /usr/bin/python3.11 /usr/bin/python3 && ln -sf /usr/bin/python3.11 /usr/bin/python
+RUN python3 -m pip install --no-cache-dir torch==2.2.0 torchvision  --index-url https://download.pytorch.org/whl/cpu
+RUN python3 -m pip install --no-cache-dir openvino==2025.2 \
+                                packaging==24.0 \
+                                accelerate==0.30.1 \
+                                diffusers==0.27.2 \
+                                timm==1.0.3 \
+                                transformers==4.41.0 \
+                                sentencepiece==0.2.0 \
+                                h5py==3.11.0 \
+                                imgaug==0.4.0 \
+                                huggingface_hub==0.23.4 \
+                                opencv-python==4.10.0.84 \
+                                numpy==1.26.4 \
+                                mujoco==3.2.6 \
+                                dm_control==1.0.26 \
+                                einops \
+                                ipython \
+                                wandb==0.17.0 \
+                                deepspeed==0.14.2 \
+                                notebook==7.4.4 \
+                                ipywidgets==8.1.7 
+                                
+
+# Clear Proxy
+ENV http_proxy=''
+ENV https_proxy=''
+
+RUN apt-get update && apt-get install -y gosu
+
+# Clean Cache
+RUN apt-get clean && rm -rf /var/lib/apt/lists/* && rm -rf /tmp/* /root/.cache
+
+COPY create_user.sh /usr/local/bin/create_user.sh
+RUN chmod +x /usr/local/bin/create_user.sh
+ENTRYPOINT ["/usr/local/bin/create_user.sh"]
diff --git a/docker/README.md b/docker/README.md
new file mode 100644
index 0000000..ca238df
--- /dev/null
+++ b/docker/README.md
@@ -0,0 +1,30 @@
+# Build Docker Image
+
+At `<project>/docker` directory:
+
+```bash
+docker build -t embodied_intelligence_sdk/rdt_1b_ov:latest --build-arg http_proxy=${http_proxy}  --build-arg https_proxy=${https_proxy} .
+```
+
+During the image building, container will create a new user as same name as the current host user, and add it to user groups "render, video" for accessing GPU. 
+
+# Run Docker Container
+```bash
+ docker run -it \
+        --network host \
+        --device /dev/dri \
+        -v /opt/rdt-ov/:/opt/rdt-ov/ \
+        -v ${HOME}/.cache/:/home/.cache \
+        -e USERNAME=${USER} \
+        -e RENDER_GID=$(getent group render | cut -d: -f3) \
+        -e http_proxy=${http_proxy} \
+        -e https_proxy=${https_proxy} \
+        --name rdt_test  --rm  embodied_intelligence_sdk/rdt_1b_ov:latest bash
+```
+- `--device /dev/dri` is to use host GPU device.
+
+- `-v ${HOME}/.cache/:/home/.cache` is to reuse huggingface model download cache.
+
+- `-e USERNAME=${USER}` is to create a user in container, avoiding as root user.
+
+- `-e RENDER_GID=$(getent group render | cut -d: -f3)` is to get host render group id.
diff --git a/docker/create_user.sh b/docker/create_user.sh
new file mode 100644
index 0000000..8569b16
--- /dev/null
+++ b/docker/create_user.sh
@@ -0,0 +1,16 @@
+#!/bin/bash
+
+if [ -z "$USERNAME" ]; then
+  echo "Error: USERNAME environment variable is not set."
+  exit 1
+fi
+
+groupadd "$USERNAME"
+useradd -m -g "$USERNAME" "$USERNAME"
+
+groupadd -g "$RENDER_GID" render
+usermod -aG render "$USERNAME"
+
+usermod -aG video "$USERNAME"
+
+exec gosu "$USERNAME" "$@"
-- 
2.34.1

